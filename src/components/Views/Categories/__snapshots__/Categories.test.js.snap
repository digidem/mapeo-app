// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Categories tests snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListHeaderComponent={
      <Unknown
        leftIcon={
          <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
            underlayColor="rgba(0, 0, 0, 0.5)"
          >
            <Icon
              allowFontScaling={false}
              color="#9E9C9C"
              name="window-close"
              size={30}
            />
          </TouchableOpacity>
        }
        rightIcon={
          <Component
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#d6d2cf",
                "borderRadius": 50,
                "height": 30,
                "justifyContent": "center",
                "width": 30,
              }
            }
          >
            <Component
              style={
                Object {
                  "backgroundColor": "#EAEAEA",
                  "borderRadius": 50,
                  "height": 25,
                  "justifyContent": "center",
                  "width": 25,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                color="white"
                name="check"
                size={18}
                style={
                  Object {
                    "alignSelf": "center",
                    "marginLeft": 3,
                  }
                }
              />
            </Component>
          </Component>
        }
      />
    }
    data={
      Array [
        Object {
          "fields": Array [],
          "icon": Object {
            "testUri": "../../../src/images/categories/category_18.png",
          },
          "id": "categoryID",
          "name": "categoryName",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    invertStickyHeaders={undefined}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={3}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#ccffff",
        "height": 80,
        "width": 750,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "height": 130,
                "opacity": 1,
                "paddingBottom": 20,
                "paddingTop": 20,
                "width": 250,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "column",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "white",
                    "borderColor": "#EAEAEA",
                    "borderRadius": 50,
                    "borderWidth": 1,
                    "elevation": 3,
                    "height": 50,
                    "justifyContent": "center",
                    "marginBottom": 5,
                    "shadowColor": "black",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 10,
                    "width": 50,
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Array [
                      Object {
                        "height": 30,
                        "width": 30,
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <RCTWebView
                      allowsInlineMediaPlayback={undefined}
                      automaticallyAdjustContentInsets={undefined}
                      bounces={undefined}
                      contentInset={undefined}
                      dataDetectorTypes={undefined}
                      decelerationRate={undefined}
                      injectedJavaScript={undefined}
                      mediaPlaybackRequiresUserAction={undefined}
                      messagingEnabled={false}
                      onLoadingError={[Function]}
                      onLoadingFinish={[Function]}
                      onLoadingStart={[Function]}
                      onMessage={[Function]}
                      onShouldStartLoadWithRequest={undefined}
                      scalesPageToFit={true}
                      scrollEnabled={false}
                      source={
                        Object {
                          "html": "<html><head><style>html, body { margin:0; padding:0; overflow:hidden; background-color: transparent; } svg { position:fixed; top:0; left:0; height:100%; width:100% }</style></head><body>n</body></html>",
                        }
                      }
                      style={
                        Array [
                          Object {
                            "flex": 1,
                          },
                          Object {
                            "backgroundColor": "#ffffff",
                          },
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "height": 100,
                              "width": 200,
                            },
                            Object {
                              "height": 30,
                              "width": 30,
                            },
                          ],
                        ]
                      }
                    />
                  </View>
                </View>
              </View>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "black",
                    "fontWeight": "700",
                    "maxWidth": 248,
                    "textAlign": "center",
                  }
                }
              >
                categoryName
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
