// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Categories tests snapshot 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListHeaderComponent={
      <Unknown
        leftIcon={
          <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
            underlayColor="rgba(0, 0, 0, 0.5)"
          >
            <Icon
              allowFontScaling={false}
              color="#9E9C9C"
              name="window-close"
              size={30}
            />
          </TouchableOpacity>
        }
        rightIcon={
          <Component
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#d6d2cf",
                "borderRadius": 50,
                "height": 30,
                "justifyContent": "center",
                "width": 30,
              }
            }
          >
            <Component
              style={
                Object {
                  "backgroundColor": "#EAEAEA",
                  "borderRadius": 50,
                  "height": 25,
                  "justifyContent": "center",
                  "width": 25,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                color="white"
                name="check"
                size={18}
                style={
                  Object {
                    "alignSelf": "center",
                    "marginLeft": 3,
                  }
                }
              />
            </Component>
          </Component>
        }
      />
    }
    data={
      Array [
        Object {
          "fieldIds": Array [
            0,
          ],
          "id": "categoryID",
          "name": "categoryName",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    invertStickyHeaders={undefined}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={3}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#ccffff",
        "height": 80,
        "width": 750,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "height": 130,
                "opacity": 1,
                "paddingBottom": 20,
                "paddingTop": 20,
                "width": 250,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "column",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "black",
                    "fontWeight": "700",
                    "maxWidth": 248,
                    "textAlign": "center",
                  }
                }
              >
                [missing "en.categories.categoryID" translation]
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
