// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CameraView tests snapshots 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CameraView
    createObservation={[MockFunction]}
    navigation={
      Object {
        "addListener": [MockFunction],
        "dispatch": [MockFunction],
        "getParam": [MockFunction],
        "goBack": [MockFunction],
        "isFocused": [MockFunction],
        "navigate": [MockFunction],
        "setParams": [MockFunction],
        "state": Object {},
      }
    }
    observations={Object {}}
    onDrawerClose={[MockFunction]}
    onDrawerOpen={[MockFunction]}
    saveMedia={[MockFunction]}
    showEditorView={false}
    showSavedModal={false}
    updateObservation={[MockFunction]}
    updateObservationSource={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "acceptDoubleTap": false,
      "acceptPan": true,
      "acceptPanOnDrawer": true,
      "acceptTap": false,
      "captureGestures": "open",
      "children": Array [
        <Unknown
          leftIcon={
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                color="#ffffff"
                name="map"
                size={30}
              />
            </TouchableOpacity>
          }
          rightIcon={
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                color="#ffffff"
                name="collections"
                size={30}
              />
            </TouchableOpacity>
          }
          style={
            Object {
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 5,
            }
          }
        />,
        <Unknown />,
        <Component
          style={
            Object {
              "flex": 1,
              "flexDirection": "column",
            }
          }
        >
          <RNCamera
            permissionDialogMessage="We need your permission to use your camera phone"
            permissionDialogTitle="Permission to use camera"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
              }
            }
            type="back"
          >
            <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
              style={
                Object {
                  "alignSelf": "center",
                  "bottom": 2,
                  "position": "absolute",
                }
              }
            >
              <Image
                source={
                  Object {
                    "testUri": "../../../src/images/add-button.png",
                  }
                }
                style={
                  Object {
                    "height": 125,
                    "width": 125,
                  }
                }
              />
            </TouchableOpacity>
          </RNCamera>
        </Component>,
      ],
      "closedDrawerOffset": 0,
      "content": <Unknown
        closeRightDrawer={[Function]}
        navigation={
          Object {
            "addListener": [MockFunction],
            "dispatch": [MockFunction],
            "getParam": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "setParams": [MockFunction],
            "state": Object {},
          }
        }
      />,
      "disabled": false,
      "elevation": 0,
      "initializeOpen": false,
      "negotiatePan": false,
      "onClose": [Function],
      "onCloseStart": [MockFunction],
      "onOpen": [Function],
      "onOpenStart": [MockFunction],
      "open": null,
      "openDrawerOffset": 0,
      "panCloseMask": null,
      "panOpenMask": null,
      "panThreshold": 0.25,
      "side": "right",
      "styles": Object {},
      "tapToClose": false,
      "tweenDuration": 250,
      "tweenEasing": "linear",
      "tweenHandler": null,
      "type": "displace",
      "useInteractionManager": false,
    },
    "ref": [Function],
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "leftIcon": <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              color="#ffffff"
              name="map"
              size={30}
            />
          </TouchableOpacity>,
          "rightIcon": <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
          >
            <Icon
              allowFontScaling={false}
              color="#ffffff"
              name="collections"
              size={30}
            />
          </TouchableOpacity>,
          "style": Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 5,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <RNCamera
              permissionDialogMessage="We need your permission to use your camera phone"
              permissionDialogTitle="Permission to use camera"
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
              type="back"
            >
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Object {
                    "alignSelf": "center",
                    "bottom": 2,
                    "position": "absolute",
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/images/add-button.png",
                    }
                  }
                  style={
                    Object {
                      "height": 125,
                      "width": 125,
                    }
                  }
                />
              </TouchableOpacity>
            </RNCamera>,
            false,
          ],
          "style": Object {
            "flex": 1,
            "flexDirection": "column",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                  style={
                    Object {
                      "alignSelf": "center",
                      "bottom": 2,
                      "position": "absolute",
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../src/images/add-button.png",
                      }
                    }
                    style={
                      Object {
                        "height": 125,
                        "width": 125,
                      }
                    }
                  />
                </TouchableOpacity>,
                false,
              ],
              "flashMode": undefined,
              "permissionDialogMessage": "We need your permission to use your camera phone",
              "permissionDialogTitle": "Permission to use camera",
              "style": Object {
                "alignItems": "center",
                "flex": 1,
              },
              "type": "back",
            },
            "ref": [Function],
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeOpacity": 0.2,
                  "children": <Image
                    source={
                      Object {
                        "testUri": "../../../src/images/add-button.png",
                      }
                    }
                    style={
                      Object {
                        "height": 125,
                        "width": 125,
                      }
                    }
                  />,
                  "onPress": [Function],
                  "style": Object {
                    "alignSelf": "center",
                    "bottom": 2,
                    "position": "absolute",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "source": Object {
                      "testUri": "../../../src/images/add-button.png",
                    },
                    "style": Object {
                      "height": 125,
                      "width": 125,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              false,
            ],
            "type": [Function],
          },
          false,
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "acceptDoubleTap": false,
        "acceptPan": true,
        "acceptPanOnDrawer": true,
        "acceptTap": false,
        "captureGestures": "open",
        "children": Array [
          <Unknown
            leftIcon={
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Icon
                  allowFontScaling={false}
                  color="#ffffff"
                  name="map"
                  size={30}
                />
              </TouchableOpacity>
            }
            rightIcon={
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
              >
                <Icon
                  allowFontScaling={false}
                  color="#ffffff"
                  name="collections"
                  size={30}
                />
              </TouchableOpacity>
            }
            style={
              Object {
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 5,
              }
            }
          />,
          <Unknown />,
          <Component
            style={
              Object {
                "flex": 1,
                "flexDirection": "column",
              }
            }
          >
            <RNCamera
              permissionDialogMessage="We need your permission to use your camera phone"
              permissionDialogTitle="Permission to use camera"
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
              type="back"
            >
              <TouchableOpacity
                activeOpacity={0.2}
                onPress={[Function]}
                style={
                  Object {
                    "alignSelf": "center",
                    "bottom": 2,
                    "position": "absolute",
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/images/add-button.png",
                    }
                  }
                  style={
                    Object {
                      "height": 125,
                      "width": 125,
                    }
                  }
                />
              </TouchableOpacity>
            </RNCamera>
          </Component>,
        ],
        "closedDrawerOffset": 0,
        "content": <Unknown
          closeRightDrawer={[Function]}
          navigation={
            Object {
              "addListener": [MockFunction],
              "dispatch": [MockFunction],
              "getParam": [MockFunction],
              "goBack": [MockFunction],
              "isFocused": [MockFunction],
              "navigate": [MockFunction],
              "setParams": [MockFunction],
              "state": Object {},
            }
          }
        />,
        "disabled": false,
        "elevation": 0,
        "initializeOpen": false,
        "negotiatePan": false,
        "onClose": [Function],
        "onCloseStart": [MockFunction],
        "onOpen": [Function],
        "onOpenStart": [MockFunction],
        "open": null,
        "openDrawerOffset": 0,
        "panCloseMask": null,
        "panOpenMask": null,
        "panThreshold": 0.25,
        "side": "right",
        "styles": Object {},
        "tapToClose": false,
        "tweenDuration": 250,
        "tweenEasing": "linear",
        "tweenHandler": null,
        "type": "displace",
        "useInteractionManager": false,
      },
      "ref": [Function],
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "leftIcon": <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                color="#ffffff"
                name="map"
                size={30}
              />
            </TouchableOpacity>,
            "rightIcon": <TouchableOpacity
              activeOpacity={0.2}
              onPress={[Function]}
            >
              <Icon
                allowFontScaling={false}
                color="#ffffff"
                name="collections"
                size={30}
              />
            </TouchableOpacity>,
            "style": Object {
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 5,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <RNCamera
                permissionDialogMessage="We need your permission to use your camera phone"
                permissionDialogTitle="Permission to use camera"
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                  }
                }
                type="back"
              >
                <TouchableOpacity
                  activeOpacity={0.2}
                  onPress={[Function]}
                  style={
                    Object {
                      "alignSelf": "center",
                      "bottom": 2,
                      "position": "absolute",
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "testUri": "../../../src/images/add-button.png",
                      }
                    }
                    style={
                      Object {
                        "height": 125,
                        "width": 125,
                      }
                    }
                  />
                </TouchableOpacity>
              </RNCamera>,
              false,
            ],
            "style": Object {
              "flex": 1,
              "flexDirection": "column",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <TouchableOpacity
                    activeOpacity={0.2}
                    onPress={[Function]}
                    style={
                      Object {
                        "alignSelf": "center",
                        "bottom": 2,
                        "position": "absolute",
                      }
                    }
                  >
                    <Image
                      source={
                        Object {
                          "testUri": "../../../src/images/add-button.png",
                        }
                      }
                      style={
                        Object {
                          "height": 125,
                          "width": 125,
                        }
                      }
                    />
                  </TouchableOpacity>,
                  false,
                ],
                "flashMode": undefined,
                "permissionDialogMessage": "We need your permission to use your camera phone",
                "permissionDialogTitle": "Permission to use camera",
                "style": Object {
                  "alignItems": "center",
                  "flex": 1,
                },
                "type": "back",
              },
              "ref": [Function],
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeOpacity": 0.2,
                    "children": <Image
                      source={
                        Object {
                          "testUri": "../../../src/images/add-button.png",
                        }
                      }
                      style={
                        Object {
                          "height": 125,
                          "width": 125,
                        }
                      }
                    />,
                    "onPress": [Function],
                    "style": Object {
                      "alignSelf": "center",
                      "bottom": 2,
                      "position": "absolute",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "source": Object {
                        "testUri": "../../../src/images/add-button.png",
                      },
                      "style": Object {
                        "height": 125,
                        "width": 125,
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                false,
              ],
              "type": [Function],
            },
            false,
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
