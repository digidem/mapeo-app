diff --git a/node_modules/nodejs-mobile-react-native/android/build.gradle b/node_modules/nodejs-mobile-react-native/android/build.gradle
index b6dccc4..c6d8dca 100644
--- a/node_modules/nodejs-mobile-react-native/android/build.gradle
+++ b/node_modules/nodejs-mobile-react-native/android/build.gradle
@@ -50,6 +50,7 @@ def _isCorrectSTLDefinedByApp = DoesAppAlreadyDefineWantedSTL()
 android {
     compileSdkVersion ((rootProject?.ext?.properties?.compileSdkVersion) ?: 23)
     buildToolsVersion ((rootProject?.ext?.properties?.buildToolsVersion) ?: "23.0.1")
+    ndkVersion "21.4.7075529"
 
     defaultConfig {
         minSdkVersion _nodeMinSdkVersion
@@ -76,9 +77,10 @@ android {
     }
 
     sourceSets {
-        main {
-            jniLibs.srcDirs 'libnode/bin/'
-        }
+        // see https://github.com/JaneaSystems/nodejs-mobile/issues/317#issuecomment-852033823
+        // main {
+        //     jniLibs.srcDirs 'libnode/bin/'
+        // }
         main.assets.srcDirs += '../install/resources/nodejs-modules'
     }
 
@@ -261,51 +263,59 @@ if ("1".equals(shouldRebuildNativeModules)) {
         String temp_cc_ver = '4.9';
         String temp_dest_cpu;
         String temp_v8_arch;
-        String temp_suffix;
-        String temp_toolchain_name;
+        String temp_binutils_prefix;
+        String temp_compiler_prefix;
         String cargo_build_target;
         switch ( temp_arch )
         {
             case 'arm':
                 temp_dest_cpu = "${temp_arch}"
                 temp_v8_arch = "${temp_arch}"
-                temp_suffix = "${temp_arch}-linux-androideabi"
-                temp_toolchain_name = "${temp_suffix}"
+                temp_binutils_prefix = "arm-linux-androideabi"
+                temp_compiler_prefix = "armv7a-linux-androideabi${_compileNativeModulesSdkVersion}"
                 cargo_build_target = 'arm-linux-androideabi'
                 break
             case 'x86':
                 temp_dest_cpu = 'ia32'
                 temp_v8_arch = 'ia32'
-                temp_suffix = 'i686-linux-android'
-                temp_toolchain_name = "${temp_arch}"
-                cargo_build_target = temp_suffix
+                temp_binutils_prefix = "i686-linux-android"
+                temp_compiler_prefix = "i686-linux-android${_compileNativeModulesSdkVersion}"
+                cargo_build_target = "i686-linux-android"
                 break
             case 'x86_64':
                 temp_dest_cpu = 'x64'
                 temp_v8_arch = 'x64'
-                temp_suffix = "${temp_arch}-linux-android"
-                temp_toolchain_name = "${temp_arch}"
-                cargo_build_target = temp_suffix
+                temp_binutils_prefix = "x86_64-linux-android"
+                temp_compiler_prefix = "x86_64-linux-android${_compileNativeModulesSdkVersion}"
+                cargo_build_target = "x86_64-linux-android"
                 break
             case 'arm64':
                 temp_dest_cpu = "${temp_arch}"
                 temp_v8_arch = "${temp_arch}"
-                temp_suffix = 'aarch64-linux-android'
-                temp_toolchain_name = 'aarch64'
-                cargo_build_target = temp_suffix
+                temp_binutils_prefix = "aarch64-linux-android"
+                temp_compiler_prefix = "aarch64-linux-android${_compileNativeModulesSdkVersion}"
+                cargo_build_target = "aarch64-linux-android"
                 break
             default:
                 throw new GradleException("Unsupported architecture for nodejs-mobile native modules: ${temp_arch}")
                 break
         }
 
+        String temp_host_tag
+        if (OperatingSystem.current().isMacOsX()) {
+            temp_host_tag = 'darwin-x86_64'
+        } else if (OperatingSystem.current().isLinux()) {
+            temp_host_tag = 'linux-x86_64'
+        } else {
+            throw new GradleException("Unsupported opperating system for nodejs-mobile native builds: ${OperatingSystem.current().getName()}")
+        }
+
         String ndk_bundle_path = android.ndkDirectory
-        String standalone_toolchain = "${rootProject.buildDir}/standalone-toolchains/${temp_toolchain_name}"
-        String npm_toolchain_add_to_path = "${rootProject.buildDir}/bin"
-        String npm_toolchain_ar = "${standalone_toolchain}/bin/${temp_suffix}-ar"
-        String npm_toolchain_cc = "${standalone_toolchain}/bin/${temp_suffix}-clang"
-        String npm_toolchain_cxx = "${standalone_toolchain}/bin/${temp_suffix}-clang++"
-        String npm_toolchain_link = "${standalone_toolchain}/bin/${temp_suffix}-clang++"
+        String toolchain_path = "${ndk_bundle_path}/toolchains/llvm/prebuilt/${temp_host_tag}"
+        String npm_toolchain_ar = "${toolchain_path}/bin/${temp_binutils_prefix}-ar"
+        String npm_toolchain_cc = "${toolchain_path}/bin/${temp_compiler_prefix}-clang"
+        String npm_toolchain_cxx = "${toolchain_path}/bin/${temp_compiler_prefix}-clang++"
+        String npm_toolchain_link = "${toolchain_path}/bin/${temp_compiler_prefix}-clang++"
         String cargo_target_triple = cargo_build_target.toUpperCase().replaceAll('-', '_')
 
         String npm_gyp_defines = "target_arch=${temp_arch}"
@@ -358,16 +368,8 @@ if ("1".equals(shouldRebuildNativeModules)) {
             }
         }
 
-        task "MakeToolchain${abi_name}" (type:Exec) {
-            description = "Building a native toolchain to compile nodejs-mobile native modules for ${abi_name}."
-            executable = "${ndk_bundle_path}/build/tools/make-standalone-toolchain.sh"
-            args "--toolchain=${temp_toolchain_name}-${temp_cc_ver}", "--arch=${temp_arch}", "--install-dir=${standalone_toolchain}", "--stl=libc++", "--force", "--platform=android-${_compileNativeModulesSdkVersion}"
-            outputs.dir "${standalone_toolchain}"
-        }
-
         task "BuildNpmModules${abi_name}" (type:Exec) {
             dependsOn "CopyNodeProjectAssets${abi_name}"
-            dependsOn "MakeToolchain${abi_name}"
             description = "Building native modules for ${abi_name}."
             inputs.file "${rootProject.buildDir}/nodejs-native-assets-temp-build/nodejs-native-assets-${abi_name}/copy.timestamp"
             outputs.dir "${rootProject.buildDir}/nodejs-native-assets-temp-build/nodejs-native-assets-${abi_name}/nodejs-project/"
@@ -398,7 +400,7 @@ if ("1".equals(shouldRebuildNativeModules)) {
             environment ("CARGO_TARGET_${cargo_target_triple}_AR", "${npm_toolchain_ar}")
             environment ("CARGO_TARGET_${cargo_target_triple}_LINKER", "${npm_toolchain_link}")
 
-            environment ('TOOLCHAIN',"${standalone_toolchain}")
+            environment ('TOOLCHAIN',"${toolchain_path}")
             environment ('AR',"${npm_toolchain_ar}")
             environment ('CC',"${npm_toolchain_cc}")
             environment ('CXX',"${npm_toolchain_cxx}")
diff --git a/node_modules/nodejs-mobile-react-native/android/src/main/java/com/janeasystems/rn_nodejs_mobile/RNNodeJsMobileModule.java b/node_modules/nodejs-mobile-react-native/android/src/main/java/com/janeasystems/rn_nodejs_mobile/RNNodeJsMobileModule.java
index e882a0c..d5ed11a 100644
--- a/node_modules/nodejs-mobile-react-native/android/src/main/java/com/janeasystems/rn_nodejs_mobile/RNNodeJsMobileModule.java
+++ b/node_modules/nodejs-mobile-react-native/android/src/main/java/com/janeasystems/rn_nodejs_mobile/RNNodeJsMobileModule.java
@@ -32,6 +32,7 @@ public class RNNodeJsMobileModule extends ReactContextBaseJavaModule implements
   private final ReactApplicationContext reactContext;
   private static final String TAG = "NODEJS-RN";
   private static final String NODEJS_PROJECT_DIR = "nodejs-project";
+  private static final String NODEJS_ASSETS_DIR = "nodejs-assets";
   private static final String NODEJS_BUILTIN_MODULES = "nodejs-builtin_modules";
   private static final String TRASH_DIR = "nodejs-project-trash";
   private static final String SHARED_PREFS = "NODEJS_MOBILE_PREFS";
@@ -42,6 +43,7 @@ public class RNNodeJsMobileModule extends ReactContextBaseJavaModule implements
   private static String trashDirPath;
   private static String filesDirPath;
   private static String nodeJsProjectPath;
+  private static String nodeJsAssetsPath;
   private static String builtinModulesPath;
   private static String nativeAssetsPath;
 
@@ -74,6 +76,7 @@ public class RNNodeJsMobileModule extends ReactContextBaseJavaModule implements
 
     // The paths where we expect the node project assets to be at runtime.
     nodeJsProjectPath = filesDirPath + "/" + NODEJS_PROJECT_DIR;
+    nodeJsAssetsPath = filesDirPath + "/" + NODEJS_ASSETS_DIR;
     builtinModulesPath = filesDirPath + "/" + NODEJS_BUILTIN_MODULES;
     trashDirPath = filesDirPath + "/" + TRASH_DIR;
     nativeAssetsPath = BUILTIN_NATIVE_ASSETS_PREFIX + getCurrentABIName();
@@ -387,6 +390,9 @@ public class RNNodeJsMobileModule extends ReactContextBaseJavaModule implements
     // Copy the nodejs built-in modules to the application's data path.
     copyAssetFolder("builtin_modules", builtinModulesPath);
 
+    // Copy nodejs assets (e.g. presets) which can vary between variants
+    copyAssetFolder("nodejs-assets", nodeJsAssetsPath);
+
     saveLastUpdateTime();
     Log.d(TAG, "Node assets copy completed successfully");
   }
diff --git a/node_modules/nodejs-mobile-react-native/index.js b/node_modules/nodejs-mobile-react-native/index.js
index ef45a64..92a53ae 100644
--- a/node_modules/nodejs-mobile-react-native/index.js
+++ b/node_modules/nodejs-mobile-react-native/index.js
@@ -1,6 +1,6 @@
 
 import { NativeModules, NativeAppEventEmitter } from 'react-native';
-var EventEmitter = require('react-native/Libraries/vendor/emitter/EventEmitter');
+var EventEmitter = require('react-native/Libraries/vendor/emitter/EventEmitter').default;
 
 const EVENT_CHANNEL = '_EVENTS_';
 
