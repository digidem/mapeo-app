name: Android
on:
  pull_request:
    # By default, a workflow only runs when a pull_request 's activity type is
    # opened , synchronize , or reopened. Adding ready_for_review here ensures
    # that CI runs when a PR is marked as not a draft, since we skip CI when a
    # PR is draft
    types: [opened, synchronize, reopened, ready_for_review]
jobs:
  backend-tests:
    if: github.event.pull_request.draft == false
    name: backend tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Node
        uses: actions/setup-node@v2
        with:
          node-version: "12.16.3"
      - name: Npm Install
        run: |
          npm ci
          cd src/backend
          npm ci
      - name: Backend Tests
        run: |
          cd src/backend
          npm test
  e2e-build:
    if: github.event.pull_request.draft == false
    name: e2e build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Node
        uses: actions/setup-node@v1
      - name: Use specific Java version for sdkmanager to work
        uses: joschi/setup-jdk@v2
        with:
          java-version: "openjdk8"
          architecture: "x64"
      # Our build will otherwise use NDK 22, which does not work.
      - name: Delete newer NDK version
        run: rm -rf $ANDROID_HOME/ndk/22*
      - name: Install node_modules
        run: |
          mkdir -p nodejs-assets
          npm ci
      - name: Build backend
        run: |
          npm run build:backend
      - name: Build translations
        run: |
          npm run build:translations
      - name: Build for detox
        run: |
          npm run build-detox-android
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: outputs-apk
          path: android/app/build/outputs/apk
  e2e-tests:
    needs: e2e-build
    name: e2e tests
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: outputs-apk
          path: android/app/build/outputs/apk
      - name: Cache npm files
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node
        uses: actions/setup-node@v1
      - name: Use specific Java version for sdkmanager to work
        uses: joschi/setup-jdk@v2
        with:
          java-version: "openjdk8"
          architecture: "x64"
      - name: Download Android Emulator Image
        run: |
          sdkmanager --update | grep -v = || true
          echo "SDK versions:"
          $ANDROID_HOME/tools/bin/sdkmanager --list
          echo "Downloading emulator image"
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-28;default;x86" > /dev/null
          echo "Creating emulator avd"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name emu --device "Nexus 6" -k 'system-images;android-28;default;x86'
          echo "Emulator version:"
          $ANDROID_HOME/emulator/emulator @emu -version
          echo "Hardware acceleration:"
          $ANDROID_HOME/emulator/emulator -accel-check
          kextstat | grep intel
          echo "\nEmulator config"
          cat $HOME/.android/avd/emu.avd/config.ini
      - name: Install node_modules
        run: |
          mkdir -p nodejs-assets
          npm ci
      - name: Android Emulator
        timeout-minutes: 10
        continue-on-error: true
        run: |
          echo "Starting emulator"
          mkdir -p artifacts
          nohup $ANDROID_HOME/emulator/emulator -avd emu -no-audio -no-snapshot -no-window -gpu swiftshader_indirect -camera-back emulated -no-boot-anim &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"
      - name: Android Detox
        run: npm start & npm run test-detox-android -- -l verbose --headless --record-videos all --record-logs all
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: test-videos
          path: artifacts
